# Production Environment Configuration Template
# Copy to .env.production and fill with actual production values
# Use secure secret management systems like HashiCorp Vault, AWS Secrets Manager, etc.

# Database Configuration
POSTGRES_DB=digital_recipes
POSTGRES_USER=prod_user
POSTGRES_PASSWORD=use_secure_random_password_from_secret_manager
DATABASE_URL=postgres://prod_user:SECURE_PASSWORD@prod-db-host:5432/digital_recipes?sslmode=require

# Application Configuration  
GIN_MODE=release
LOG_LEVEL=info

# CORS Configuration - CRITICAL: Only add your actual production domains
ALLOWED_ORIGINS=https://yourdomain.com,https://app.yourdomain.com

# JWT Configuration - CRITICAL: Generate with: openssl rand -base64 48
JWT_SECRET=REPLACE_WITH_SECURE_RANDOM_SECRET_FROM_SECRET_MANAGER
JWT_DURATION=24h
JWT_ISSUER=digital-recipes-api

# Google Cloud Storage Configuration
GOOGLE_CLOUD_PROJECT=your-production-project-id
GCS_BUCKET_NAME=your-production-bucket-name
# Use service account key or workload identity in production
GOOGLE_APPLICATION_CREDENTIALS=/path/to/production/service-account.json

# Rate Limiting Configuration  
GENERAL_RATE_LIMIT=100
UPLOAD_RATE_LIMIT=10
HIGH_VALUE_RATE_LIMIT=5

# Security Notes:
# 1. Never commit this file with real credentials
# 2. Use environment-specific secret injection in CI/CD
# 3. Rotate all secrets regularly
# 4. Monitor for credential exposure in logs
# 5. Enable PostgreSQL SSL (sslmode=require)
# 6. Use HTTPS only in production (no http://)